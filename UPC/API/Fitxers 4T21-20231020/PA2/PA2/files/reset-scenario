#!/bin/bash
count_dirs () {
    dir=$1   
    regexp=$2
    wc -l < <( awk '{print $NF}' < <(ls -l $dir) | grep -P $regexp )
}

scenario_file=$2
if [ -z "$scenario_file" ]; then
	scenario_file="scenario.json"
fi

home_dir=$1
scenario_file=$home_dir/$scenario_file

num_bridges=$(jq -r '.numBridges' $scenario_file)
routers=$(count_dirs "/var/lib/lxc/" "^R[0-9]{2}$")
pcs=$(count_dirs "/var/lib/lxc/" "^PC[0-9]{2}$")
stop_pim=false
for ((i=1; i<=$pcs; i++)); do
    if [ -d  /var/lib/lxc/$(printf "PC%02d" $i)/rootfs/home/mgen ]; then
        rm -r /var/lib/lxc/$(printf "PC%02d" $i)/rootfs/home/mgen
	stop_pim=true
    fi
done
if [ $stop_pim == true ]; then
#    $home_dir/scripts/stop-pimd
    for ((i=1; i<=$routers; i++)); do
      var=$(lxc-info -n $(printf "R%02d" $i) | grep State: | awk '{print $2}')
      if [ $var == "RUNNING" ]; then
          lxc-attach -n $(printf "R%02d" $i) -- pkill -9 pimd
      fi
    done
fi
05-stop-containers $routers $pcs
06-clean-quagga-files $routers
06-clean-quagga-files-PCs $pcs
02-copy-files $routers /home/api/practiques/config.bak
02-copy-files-PCs $pcs /home/api/practiques/config.bak
for ((i=1; i<=$routers; i++)); do
    if [ -f  /var/lib/lxc/$(printf "R%02d" $i)/rootfs/etc/sysctl.d ]; then
        rm /var/lib/lxc/$(printf "R%02d" $i)/rootfs/etc/sysctl.d
    fi
done
08-delete-bridges $num_bridges
