#!/bin/bash

usage () {
    printf "save-scenario [-h] home_dir [SCENARIO_FILE]\n"
}
while getopts "h" opt; do
  case $opt in
    h | [?]) usage ; exit;;
  esac
done
shift "$(($OPTIND -1))"
compress=true
scenario_file=$2
if [ -z "$scenario_file" ]; then
	scenario_file="scenario.json"
fi

home_dir=$1
scenario_file=$home_dir/$scenario_file

printf "Saving scenario.....\n"
id_=$home_dir/$(jq -r '.id' $scenario_file)
routers_conf_dir=$(jq -r '.routersConfDir' $scenario_file)
hosts_conf_dir=$(jq -r '.hostsConfDir' $scenario_file)
backup_dir=$(jq -r '.backupDir' $scenario_file)

if [ ! -d "$backup_dir" ] ; then mkdir -p $backup_dir ; fi
mkdir -p $backup_dir/$routers_conf_dir
mkdir -p $backup_dir/$hosts_conf_dir
echo $HOSTNAME >> $backup_dir/.hostname

routers=($(ls -d $home_dir/$routers_conf_dir/*))
for router in ${routers[*]}; do
	IFS='/' read -r -a path <<< $(echo $router)
	router_id=${path[-1]}
	printf "*** Saving configuration of router %s ***\n" "$router_id"
	mkdir -p $backup_dir/$routers_conf_dir/$router_id/
	lxc-attach -n $router_id -- vtysh -c 'w m'
	cp /var/lib/lxc/$router_id/config $backup_dir/$routers_conf_dir/$router_id/
	cp /var/lib/lxc/$router_id/rootfs/usr/local/sbin/quagga-daemons.sh $backup_dir/$routers_conf_dir/$router_id/
	cp /var/lib/lxc/$router_id/rootfs/etc/quagga/*.conf $backup_dir/$routers_conf_dir/$router_id/
done

hosts=($(ls -d $home_dir/$hosts_conf_dir/*))
for host in ${hosts[*]}; do
	IFS='/' read -r -a path <<< $(echo $host)
	host_id=${path[-1]}
	printf "*** Saving configuration of host %s ***\n" "$host_id"
	mkdir -p $backup_dir/$hosts_conf_dir/$host_id/
	cp /var/lib/lxc/$host_id/config $backup_dir/$hosts_conf_dir/$host_id/
done

ex_dir=$home_dir

if [ -d $ex_dir/config-pim ]; then
	printf "\n*** Saving pimd configuration ***\n"
	mkdir -p $backup_dir/config-pim
	routers=($(ls -d $home_dir/$routers_conf_dir/*))
	for router in ${routers[*]}; do
		IFS='/' read -r -a path <<< $(echo $router)
		router_id=${path[-1]}
		cp /var/lib/lxc/$router_id/rootfs/root/pimd/pimd.conf $backup_dir/config-pim/pimd.conf_$router_id
	done
	hosts=($(ls -d $home_dir/$hosts_conf_dir/*))
	for host in ${hosts[*]}; do
		IFS='/' read -r -a path <<< $(echo $host)
		host_id=${path[-1]}
  		if [ -d /var/lib/lxc/$host_id/rootfs/home/mgen/ ]; then
#  			if [ $(ls /var/lib/lxc/$host_id/rootfs/home/mgen/) ]; then
			cp /var/lib/lxc/$host_id/rootfs/home/mgen/* $backup_dir/config-pim
#			fi		
		fi
	done
fi

if [ -d $ex_dir/scripts ]; then
	printf "*** Saving scripts ***\n"
	mkdir -p $backup_dir/scripts
	cp $ex_dir/scripts/* $backup_dir/scripts
fi

if [ -d $ex_dir/results ]; then
	printf "*** Saving results ***\n"
	mkdir -p $backup_dir/results
	if [ "$(ls -A $ex_dir/results)" ]; then
		cp $ex_dir/results/* $backup_dir/results
	fi
fi

if [ "$compress" = true ] ; then
	tgz_file=$id_"-"$(date +%d%m%Y-%H%M%S)".tgz"
	printf "\nCompressing backup directory in file %s........." "$tgz_file"
	tar -zcf $tgz_file $backup_dir
	rm -r $backup_dir
	printf "Compressed.\n";
fi

printf "Scenario saved.\n"



